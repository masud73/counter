{"version":3,"sources":["components/Button.jsx","App.js","index.js"],"names":["Button","props","react_default","a","createElement","id","className","class","style","title","onClick","handleClick","name","enableBtn","btn","classList","remove","disabled","disableBtn","add","Buttons","Fragment","reset","decrease","increase","History","role","clearHistory","lastCount","HighestCount","Footer","href","target","rel","twitter","verticalAlign","App","_useState","useState","_useState2","Object","slicedToArray","count","setCount","_useState3","_useState4","setLastCount","_useState5","_useState6","highestCount","setHighesttCount","_useState7","_useState8","isCounting","setCounting","_useState9","_useState10","startOrContinue","setStartOrContinue","useEffect","document","querySelectorAll","forEach","btn_increase","querySelector","btn_auto","value","localStorage","getItem","last_count","highest_count","Number","btn_decrease","btn_reset","setItem","prevcount","ReactDOM","createRoot","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.1c6b34b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function Button(props)\r\n{\r\n    return (\r\n        <button\r\n            id={props.id}\r\n            className={props.class}\r\n            style={props.style}\r\n            title={props.title}\r\n            onClick={props.handleClick}\r\n        >\r\n        {props.name}\r\n        </button>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Twitter } from 'react-bootstrap-icons';\r\n\r\nimport Button from './components/Button';\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction enableBtn(btn)\r\n{\r\n    btn.classList.remove('disabled');\r\n    btn.disabled = false;\r\n}\r\n\r\nfunction disableBtn(btn)\r\n{\r\n    btn.classList.add('disabled');\r\n    btn.disabled = true;\r\n}\r\n\r\n\r\nfunction App()\r\n{\r\n    const [count, setCount] = useState(0);\r\n    const [lastCount, setLastCount] = useState(count);\r\n    const [highestCount, setHighesttCount] = useState(0);\r\n\r\n    // Auto count\r\n    const [isCounting, setCounting] = useState(false);\r\n    const [startOrContinue, setStartOrContinue] = useState('Start auto count');\r\n\r\n    const increase = () => {\r\n        setCount((prevcount) => prevcount + 1);\r\n    }\r\n\r\n    const decrease = () => {\r\n        if (count !== 0)\r\n        {\r\n            setCount((prevcount) => prevcount -1);\r\n        }\r\n        else\r\n        {\r\n            const btn_increase = document.querySelector('#increase');\r\n            enableBtn(btn_increase);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const autoCount = () => {\r\n        const btn_increase = document.querySelector('#increase');\r\n        const btn_decrease = document.querySelector('#decrease');\r\n        const btn_reset = document.querySelector('#reset');\r\n\r\n        disableBtn(btn_increase);\r\n        disableBtn(btn_decrease);\r\n        \r\n        if (count >= 1)\r\n        {\r\n            enableBtn(btn_reset);\r\n            setStartOrContinue('Continue');\r\n        }\r\n\r\n        if (!isCounting)\r\n        {\r\n            setCounting(true);\r\n        }\r\n        else\r\n        {\r\n            setCounting(false);\r\n            enableBtn(btn_increase);\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setLastCount(count);\r\n        setCounting(false);\r\n        setStartOrContinue('Start auto count');\r\n\r\n        localStorage.setItem('lastCount', count);\r\n\r\n        if (count > highestCount)\r\n        {\r\n            setHighesttCount(count);\r\n            localStorage.setItem('highestCount', count);\r\n        }\r\n        setCount(0);\r\n\r\n        const btn_increase = document.querySelector('#increase');\r\n        enableBtn(btn_increase);\r\n    }\r\n\r\n    const clearHistory = () => {\r\n        if (lastCount !== 0 || highestCount !== 0)\r\n        {\r\n            setLastCount(0);\r\n            setHighesttCount(0);\r\n            localStorage.setItem('lastCount', 0);\r\n            localStorage.setItem('highestCount', 0);\r\n        }\r\n    }\r\n\r\n    // First render\r\n    useEffect(() => {\r\n        document.querySelectorAll('button').forEach(btn => {\r\n            btn.disabled = true;\r\n        });\r\n\r\n        const btn_increase = document.querySelector('#increase');\r\n        const btn_auto = document.querySelector('#auto');\r\n\r\n        enableBtn(btn_increase);\r\n        enableBtn(btn_auto);\r\n\r\n        const value = localStorage.getItem('value');\r\n        const last_count = localStorage.getItem('lastCount');\r\n        const highest_count = localStorage.getItem('highestCount');\r\n\r\n        if (value)\r\n        {\r\n            setCount(Number(value));\r\n        }\r\n\r\n        if (last_count)\r\n        {\r\n            setLastCount(Number(last_count));\r\n        }\r\n\r\n        if (highest_count)\r\n        {\r\n            setHighesttCount(highest_count);\r\n        }\r\n        \r\n    }, []);\r\n\r\n    // Re-render anytime when changes detected\r\n    useEffect(() => {\r\n        const btn_decrease = document.querySelector('#decrease');\r\n        const btn_reset = document.querySelector('#reset');\r\n\r\n        if (count > 0)\r\n        {\r\n            enableBtn(btn_decrease);\r\n            enableBtn(btn_reset);\r\n        }\r\n        else\r\n        {\r\n            disableBtn(btn_decrease);\r\n            disableBtn(btn_reset);\r\n        }\r\n    });\r\n\r\n    // Re-render only when count changes\r\n    useEffect(() => {\r\n        localStorage.setItem('value', count);\r\n    }, [count]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main>\r\n                <header>\r\n                    <h1>Smart Counter</h1>\r\n                </header>\r\n                <section>\r\n                    <h2>{count}</h2>\r\n                </section>\r\n                <section  className='btns-wrapper'>\r\n                    <Buttons reset={reset} increase={increase} decrease={decrease} />\r\n                </section>\r\n                <section className='flex btn-auto-con'>\r\n                    <Button\r\n                        id='auto'\r\n                        name={isCounting ? 'Stop' : startOrContinue}\r\n                        title={isCounting ? 'Stop automatic counting' : 'Click to start automatic count'}\r\n                        handleClick={autoCount}\r\n                    />\r\n                </section>\r\n                <section className='history-container'>\r\n                    <History lastCount={lastCount} HighestCount={highestCount} clearHistory={clearHistory} />\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction Buttons(props)\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                id='reset'\r\n                name='Reset'\r\n                title='Reset count to 0'\r\n                class='disabled'\r\n                handleClick={props.reset}\r\n            />\r\n            <Button\r\n                id='decrease'\r\n                name='Decrease'\r\n                title='Decrease count by 1'\r\n                class='disabled'\r\n                handleClick={props.decrease}\r\n            />\r\n            <Button\r\n                id='increase'\r\n                name='Increase'\r\n                title='Add count'\r\n                handleClick={props.increase}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction History(props)\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <div className='flex'>\r\n                <h3>History</h3>\r\n                <span role='button' title='Clear all history (This cannot be reversed)' onClick={props.clearHistory}>Clear history</span>\r\n            </div>\r\n            <div className='flex history'>\r\n                <p>Total last count</p>\r\n                <p>{props.lastCount}</p>\r\n            </div>\r\n            <div className='flex history'>\r\n                <p>Highest count</p>\r\n                <p>{props.HighestCount}</p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction Footer()\r\n{\r\n    return (\r\n        <footer><small>Created by <b>Masud</b>. Follow me on Twitter\r\n        <a href='https://www.twitter.com/____masud' target='_blank' rel='noopener noreferrer'> <Twitter style={{verticalAlign: 'middle'}} /> @____masud</a></small></footer>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}