{"version":3,"sources":["components/Button.jsx","components/Modal.jsx","static/disabled.js","App.js","index.js"],"names":["Button","props","react_default","a","createElement","id","type","className","class","style","title","onClick","handleClick","name","Modal","x_lg","document","querySelector","display","onSubmit","handleSubmit","value","speedValue","onChange","handleChange","speeds","map","speed","index","key","enableBtn","btn","classList","remove","disabled","disableBtn","add","Buttons","Fragment","reset","decrease","increase","History","role","clearHistory","lastCount","HighestCount","allCount","Footer","textDecoration","color","href","target","rel","twitter","verticalAlign","App","_useState","useState","_useState2","Object","slicedToArray","count","setCount","_useState3","_useState4","setLastCount","_useState5","_useState6","highestCount","setHighestCount","_useState7","_useState8","setAllCount","_useState9","_useState10","setSpeedValue","_useState11","_useState12","isCounting","setCounting","_useState13","_useState14","startOrContinue","setStartOrContinue","_useState15","_useState16","btnIncrease","setBtnIncrease","_useState17","_useState18","btnDecrease","setBtnDecrease","useEffect","querySelectorAll","forEach","btn_increase","btn_decrease","btn_auto","btn_start","localStorage","getItem","last_count","highest_count","all_count","Number","btn_reset","setItem","timer","setInterval","prevcount","clearInterval","event","preventDefault","ReactDOM","createRoot","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.d58f8166.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function Button(props)\r\n{\r\n    return (\r\n        <button\r\n            id={props.id}\r\n            type={props.type}\r\n            className={props.class}\r\n            style={props.style}\r\n            title={props.title}\r\n            onClick={props.handleClick}\r\n        >\r\n        {props.name}\r\n        </button>\r\n    );\r\n}","import React from \"react\";\r\nimport { XLg } from \"react-bootstrap-icons\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nexport default function Modal(props)\r\n{\r\n    return (\r\n        <div className=\"modal flex\">\r\n            <div className=\"modal-content\">\r\n                <header className=\"flex\">\r\n                    <h4 className=\"modal-title\">Set auto count</h4>\r\n                    <XLg onClick={() => document.querySelector('.modal').style.display = 'none'} />\r\n                </header>\r\n                <form onSubmit={props.handleSubmit} className='flex'>\r\n                    <label>Speed (in milliseconds)</label>\r\n                    <select value={props.speedValue} onChange={props.handleChange}>\r\n                        <option value='1000'>1000 ms (Default)</option>\r\n                        {speeds.map((speed, index) => (\r\n                            <option value={speed} key={index}>{speed} ms</option>\r\n                        ))}\r\n                    </select>\r\n                    <Button\r\n                        id='btn-start'\r\n                        type='submit'\r\n                        name='Start'\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst speeds = [0,50,100,500,1000,1500,2000,3000,5000];","export function enableBtn(btn)\r\n{\r\n    btn.classList.remove('disabled');\r\n    btn.disabled = false;\r\n}\r\n\r\nexport function disableBtn(btn)\r\n{\r\n    btn.classList.add('disabled');\r\n    btn.disabled = true;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Twitter } from 'react-bootstrap-icons';\r\n\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\nimport { enableBtn, disableBtn } from './static/disabled';\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App()\r\n{\r\n    const [count, setCount] = useState(0);\r\n    const [lastCount, setLastCount] = useState(count);\r\n    const [highestCount, setHighestCount] = useState(0);\r\n    const [allCount, setAllCount] = useState(0);\r\n    const [speedValue, setSpeedValue] = useState(1000);\r\n\r\n    const [isCounting, setCounting] = useState(false);\r\n    const [startOrContinue, setStartOrContinue] = useState('Start auto count');\r\n\r\n    const [btnIncrease, setBtnIncrease] = useState(null);\r\n    const [btnDecrease, setBtnDecrease] = useState(null);\r\n\r\n\r\n    const increase = () => {\r\n        setCount((prevcount) => prevcount + 1);\r\n    }\r\n\r\n    const decrease = () => {\r\n        if (count !== 0)\r\n        {\r\n            setCount((prevcount) => prevcount -1);\r\n        }\r\n        else\r\n        {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setLastCount(count);\r\n        setAllCount((prevcount) => prevcount + count);\r\n        setCounting(false);\r\n        setSpeedValue(1000);\r\n        setStartOrContinue('Start auto count');\r\n\r\n        localStorage.setItem('lastCount', count);\r\n        localStorage.setItem('allCount', allCount + count);\r\n\r\n        if (count > highestCount)\r\n        {\r\n            setHighestCount(count);\r\n            localStorage.setItem('highestCount', count);\r\n        }\r\n\r\n        setCount(0);\r\n        enableBtn(btnIncrease);\r\n    }\r\n\r\n    const autoCount = () => {\r\n        if (!isCounting && count <= 0)\r\n        {\r\n            document.querySelector('.modal').style.display = 'flex';\r\n        }\r\n\r\n        if (isCounting)\r\n        {\r\n            setStartOrContinue('Continue');\r\n            setCounting(false);\r\n            enableBtn(btnIncrease);\r\n        }\r\n\r\n        if (!isCounting && count >= 1)\r\n        {\r\n            setCounting(true);\r\n            disableBtn(btnDecrease);\r\n            disableBtn(btnIncrease);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        document.querySelector('.modal').style.display = 'none';\r\n        \r\n        disableBtn(btnIncrease);\r\n        disableBtn(btnDecrease);\r\n        \r\n\r\n        if (!isCounting)\r\n        {\r\n            setCounting(true);\r\n            disableBtn(btnDecrease);\r\n        }\r\n        else\r\n        {\r\n            setCounting(false);\r\n            enableBtn(btnIncrease);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setSpeedValue(event.target.value);\r\n    }\r\n\r\n    const clearHistory = () => {\r\n        if (lastCount !== 0 || highestCount !== 0 || allCount !== 0)\r\n        {\r\n            setLastCount(0);\r\n            setAllCount(0);\r\n            setHighestCount(0);\r\n            localStorage.setItem('lastCount', 0);\r\n            localStorage.setItem('highestCount', 0);\r\n            localStorage.setItem('allCount', 0);\r\n        }\r\n    }\r\n\r\n    // First render\r\n    useEffect(() => {\r\n        document.querySelectorAll('button').forEach(btn => {\r\n            btn.disabled = true;\r\n        });\r\n\r\n        const btn_increase = document.querySelector('#increase');\r\n        const btn_decrease = document.querySelector('#decrease');\r\n        const btn_auto = document.querySelector('#auto');\r\n        const btn_start = document.querySelector('#btn-start');\r\n\r\n        setBtnIncrease(btn_increase);\r\n        setBtnDecrease(btn_decrease);\r\n\r\n        enableBtn(btn_increase);\r\n        enableBtn(btn_auto);\r\n        enableBtn(btn_start);\r\n\r\n        const value = localStorage.getItem('value');\r\n        const last_count = localStorage.getItem('lastCount');\r\n        const highest_count = localStorage.getItem('highestCount');\r\n        const all_count = localStorage.getItem('allCount');\r\n\r\n        if (value) setCount(Number(value));\r\n        if (last_count) setLastCount(Number(last_count));\r\n        if (highest_count) setHighestCount(highest_count);\r\n        if (all_count) setAllCount(Number(all_count));\r\n\r\n    }, []);\r\n\r\n    // Re-render whenever change detected\r\n    useEffect(() => {\r\n        const btn_decrease = document.querySelector('#decrease');\r\n        const btn_reset = document.querySelector('#reset');\r\n\r\n        if (count > 0)\r\n        {\r\n            if (!isCounting) enableBtn(btn_decrease);\r\n            enableBtn(btn_reset);\r\n        }\r\n        else\r\n        {\r\n            disableBtn(btn_decrease);\r\n            disableBtn(btn_reset);\r\n        }\r\n    });\r\n\r\n    // Re-render only when count change\r\n    useEffect(() => {\r\n        localStorage.setItem('value', count);\r\n    }, [count]);\r\n\r\n    // Re-render only when isCounting change\r\n    useEffect(() => {\r\n        if (isCounting)\r\n        {\r\n            var timer = setInterval(() => {\r\n                setCount((prevcount) => prevcount + 1);\r\n            }, speedValue);\r\n        }\r\n        return () => {\r\n            clearInterval(timer);\r\n        }\r\n    }, [isCounting]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal handleChange={handleChange} handleSubmit={handleSubmit} speedValue={speedValue} />\r\n            <main>\r\n                <header>\r\n                    <h1>Smart Counter</h1>\r\n                </header>\r\n                <section>\r\n                    <h2>{count}</h2>\r\n                </section>\r\n                <section  className='btns-wrapper'>\r\n                    <Buttons reset={reset} increase={increase} decrease={decrease} />\r\n                </section>\r\n                <section className='flex btn-auto-con'>\r\n                    <Button\r\n                        id='auto'\r\n                        name={isCounting ? 'Stop' : startOrContinue}\r\n                        title={isCounting ? 'Stop auto count' : startOrContinue}\r\n                        handleClick={autoCount}\r\n                    />\r\n                </section>\r\n                <section className='history-container'>\r\n                    <History lastCount={lastCount} HighestCount={highestCount} clearHistory={clearHistory} allCount={allCount} />\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Buttons(props)\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                id='reset'\r\n                name='Reset'\r\n                title='Reset count to 0'\r\n                class='disabled'\r\n                handleClick={props.reset}\r\n            />\r\n            <Button\r\n                id='decrease'\r\n                name='Decrease'\r\n                title='Decrease count by 1'\r\n                class='disabled'\r\n                handleClick={props.decrease}\r\n            />\r\n            <Button\r\n                id='increase'\r\n                name='Increase'\r\n                title='Add count manually'\r\n                handleClick={props.increase}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction History(props)\r\n{\r\n    return (\r\n        <React.Fragment>\r\n            <div className='flex'>\r\n                <h3>History</h3>\r\n                <span role='button' title='Clear all history (This cannot be reversed)' onClick={props.clearHistory}>Clear history</span>\r\n            </div>\r\n            <div className='flex history'>\r\n                <p>Last count</p>\r\n                <p>{props.lastCount}</p>\r\n            </div>\r\n            <div className='flex history'>\r\n                <p>Highest count</p>\r\n                <p>{props.HighestCount}</p>\r\n            </div>\r\n            <div className='flex history'>\r\n                <p>Total all count</p>\r\n                <p>{props.allCount}</p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Footer()\r\n{\r\n    return (\r\n        <footer><small>Created by <a style={{textDecoration: 'underline', color: '#000'}} href='https://masud73-portfolio.netlify.app' target='_blank' rel='noopener noreferrer'><b>Masud</b>.</a> Follow me on Twitter\r\n        <a href='https://www.twitter.com/____masud' target='_blank' rel='noopener noreferrer'> <Twitter style={{verticalAlign: 'middle'}} /> @____masud</a></small></footer>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}